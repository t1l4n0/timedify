import { json } from "@remix-run/node";
import { useLoaderData } from "@remix-run/react";
import { authenticate } from "../shopify.server";
import { Page, Layout, Card, Text, Button, Banner } from "@shopify/polaris";

export const loader = async ({ request }: { request: Request }) => {
  try {
    const { admin, session } = await authenticate.admin(request);
    
    // Subscription-Status abfragen
    const response = await admin.graphql(
      `#graphql
      query {
        currentAppInstallation {
          activeSubscriptions {
            id
            name
            status
            currentPeriodEnd
          }
        }
      }`
    );
    const { data } = await response.json();
    
    const activeSubs = data.currentAppInstallation.activeSubscriptions;
    const hasActiveSub = activeSubs.some(
      (sub: any) => sub.status === "ACTIVE" && new Date(sub.currentPeriodEnd) > new Date()
    );

    const shopName = session.shop.replace(".myshopify.com", "");
    const appHandle = "timed-content-app";
    const themeEditorUrl = `#`;

    return json({
      hasActiveSub,
      themeEditorUrl,
      shopName
    });
    
  } catch (error) {
    console.error("‚ùå Fehler im Loader:", error);
    
    try {
      const { session } = await authenticate.admin(request);
      return json({
        hasActiveSub: false,
        themeEditorUrl: "#",
        shopName: session.shop.replace(".myshopify.com", ""),
        error: true
      });
    } catch (fallbackError) {
      console.error("‚ùå Fallback-Fehler:", fallbackError);
      return json({
        hasActiveSub: false,
        themeEditorUrl: "#",
        shopName: "unknown",
        error: true
      });
    }
  }
};

export default function Index() {
  const loaderData = useLoaderData<typeof loader>();
  const { hasActiveSub, themeEditorUrl, shopName, error } = loaderData as {
    hasActiveSub: boolean;
    themeEditorUrl: string;
    shopName: string;
    error?: boolean;
  };
  
  const goToAdmin = (adminPath: string) => {
    const adminUrl = `https://${shopName}.myshopify.com/admin${adminPath}`;
    window.top.location.href = adminUrl;
  };

  // Normale App-Seite mit aktiven Abonnement
  return (
    <Page
      title="Timedify: Content Scheduler"
      subtitle="Schedule content and promotions to display automatically and improve store engagement"
      primaryAction={<Button 
        variant="secondary" 
        onClick={() => {
          // Navigation zum Theme Editor im selben Fenster (Top-Level)
          goToAdmin('/themes/current/editor');
        }}
      >
        Go to Theme Editor
      </Button>}
    >
      <Layout>
        <Layout.Section>
          <Card>
            <Text as="h3" variant="headingMd">
              üí≥ Subscription Status
            </Text>
            
            {hasActiveSub ? (
              <div style={{ marginTop: '0.5rem', padding: '1rem', backgroundColor: '#d4edda', borderRadius: '8px', border: '1px solid #c3e6cb' }}>
                <Text as="p" variant="bodyMd">
                  ‚úÖ <strong>Active subscription found!</strong> You can use all app features.
                </Text>
              </div>
            ) : (
              <div style={{ marginTop: '0.5rem', padding: '1rem', backgroundColor: '#fff3cd', borderRadius: '8px', border: '1px solid #ffeaa7' }}>
                <Text as="p" variant="bodyMd">
                  ‚ö†Ô∏è <strong>No active subscription found.</strong> You need a subscription to use all features.
                </Text>
              </div>
            )}
            
            <div style={{ marginTop: '1rem', display: 'flex', flexDirection: 'column', gap: '1rem' }}>
              <Button 
                variant="primary" 
                onClick={() => {
                  // Navigation zu Pricing Plans im selben Fenster (Top-Level)
                  goToAdmin('/charges/timed-content-app/pricing_plans');
                }}
              >
                üìã View Plans
              </Button>
            </div>
          </Card>
        </Layout.Section>

        <Layout.Section>
          <Card>
            <Text as="p">
              Timed Content allows merchants to display text, images, videos, buttons, and custom HTML based on a set schedule. You can easily define start and end dates for each content block, ensuring that promotional campaigns, announcements, or seasonal updates appear exactly when needed. The app also offers optional countdown timers to build urgency around upcoming or ending offers. Timed Content helps merchants streamline store management by automating time-sensitive updates without manual intervention.
            </Text>
          </Card>
        </Layout.Section>

        <Layout.Section>
          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '2rem' }}>
            <Card>
              <Text as="h3" variant="headingMd">
                How to add the Timedify App Block
              </Text>
              
              <div style={{ position: 'relative', paddingBottom: '56.25%', height: 0, overflow: 'hidden', maxWidth: '100%', margin: '1rem 0', backgroundColor: '#f6f6f7', borderRadius: '8px' }}>
                <div 
                  style={{ 
                    position: 'absolute',
                    top: '50%',
                    left: '50%',
                    transform: 'translate(-50%, -50%)',
                    width: '80px', 
                    height: '80px', 
                    borderRadius: '50%', 
                    backgroundColor: '#007cba', 
                    display: 'flex', 
                    alignItems: 'center', 
                    justifyContent: 'center', 
                    cursor: 'pointer',
                    boxShadow: '0 4px 12px rgba(0, 124, 186, 0.3)',
                    transition: 'all 0.3s ease'
                  }}
                  onClick={(e) => {
                    const videoContainer = e.currentTarget.parentElement;
                    if (videoContainer) {
                      const iframe = document.createElement('iframe');
                      // Saubere YouTube-Embed-URL ohne problematische Parameter
                      iframe.src = 'https://www.youtube-nocookie.com/embed/Tvz61ykCn-I?rel=0&modestbranding=1&enablejsapi=0';
                      iframe.style.position = 'absolute';
                      iframe.style.top = '0';
                      iframe.style.left = '0';
                      iframe.style.width = '100%';
                      iframe.style.height = '100%';
                      iframe.style.border = 'none';
                      iframe.frameBorder = '0';
                      iframe.webkitAllowFullScreen = true;
                      iframe.mozAllowFullScreen = true;
                      iframe.allowFullScreen = true;
                      iframe.title = 'YouTube video player';
                      // Keine sandbox f√ºr YouTube - verursacht Probleme
                      videoContainer.appendChild(iframe);
                      e.currentTarget.style.display = 'none';

                    }
                  }}
                  onMouseEnter={(e) => {
                    e.currentTarget.style.transform = 'translate(-50%, -50%) scale(1.1)';
                    e.currentTarget.style.boxShadow = '0 6px 20px rgba(0, 124, 186, 0.4)';
                  }}
                  onMouseLeave={(e) => {
                    e.currentTarget.style.transform = 'translate(-50%, -50%) scale(1)';
                    e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 124, 186, 0.3)';
                  }}
                >
                  <div style={{ color: 'white', fontSize: '32px' }}>‚ñ∂</div>
                </div>
              </div>

              <Text as="p">Follow these steps to add the Timedify App Block using the Theme Editor:</Text>
              <ul>
                <li>Access the Theme Editor: Go to your Shopify Admin, navigate to Online Store &gt; Themes, and click Customize on your active theme.</li>
                <li>Select a Section: Choose the page or section (e.g., Homepage, Product Page) where you want to add the block.</li>
                <li>Add the Block: Click + Add block, find the Timedify App Block, and add it to the section.</li>
                <li>Configure Settings: Adjust the block's settings (schedule, content, etc.) as needed.</li>
                <li>Save Changes: Click Save to apply the block to your store.</li>
              </ul>
              <Text as="p">Preview your changes in the Theme Editor and test the block on your store's frontend to ensure everything works as expected.</Text>
              <Button 
                variant="primary" 
                onClick={() => {
                  // Navigation zum Theme Editor im selben Fenster (Top-Level)
                  goToAdmin('/themes/current/editor');
                }}
              >
                Go to Theme Editor
              </Button>
            </Card>

            <Card>
              <Text as="h3" variant="headingMd">
                How to use the Timedify App Block
              </Text>
              
              <div style={{ position: 'relative', paddingBottom: '56.25%', height: 0, overflow: 'hidden', maxWidth: '100%', margin: '1rem 0', backgroundColor: '#f6f6f7', borderRadius: '8px' }}>
                <div 
                  style={{ 
                    position: 'absolute',
                    top: '50%',
                    left: '50%',
                    transform: 'translate(-50%, -50%)',
                    width: '80px', 
                    height: '80px', 
                    borderRadius: '50%', 
                    backgroundColor: '#007cba', 
                    display: 'flex', 
                    alignItems: 'center', 
                    justifyContent: 'center', 
                    cursor: 'pointer',
                    boxShadow: '0 4px 12px rgba(0, 124, 186, 0.3)',
                    transition: 'all 0.3s ease'
                  }}
                  onClick={(e) => {
                    const videoContainer = e.currentTarget.parentElement;
                    if (videoContainer) {
                      const iframe = document.createElement('iframe');
                      // YouTube-Video (ehemals Loom) - viel sauberer!
                      iframe.src = 'https://www.youtube-nocookie.com/embed/hbyV7lgt4wY?rel=0&modestbranding=1&enablejsapi=0';
                      iframe.style.position = 'absolute';
                      iframe.style.top = '0';
                      iframe.style.left = '0';
                      iframe.style.width = '100%';
                      iframe.style.height = '100%';
                      iframe.style.border = 'none';
                      iframe.frameBorder = '0';
                      iframe.webkitAllowFullScreen = true;
                      iframe.mozAllowFullScreen = true;
                      iframe.allowFullScreen = true;
                      iframe.title = 'YouTube video player';
                      // Keine sandbox f√ºr YouTube - verursacht Probleme
                      videoContainer.appendChild(iframe);
                      e.currentTarget.style.display = 'none';

                    }
                  }}
                  onMouseEnter={(e) => {
                    e.currentTarget.style.transform = 'translate(-50%, -50%) scale(1.1)';
                    e.currentTarget.style.boxShadow = '0 6px 20px rgba(0, 124, 186, 0.4)';
                  }}
                  onMouseLeave={(e) => {
                    e.currentTarget.style.transform = 'translate(-50%, -50%) scale(1)';
                    e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 124, 186, 0.3)';
                  }}
                >
                  <div style={{ color: 'white', fontSize: '32px' }}>‚ñ∂</div>
                </div>
              </div>

              <Text as="p">Once the App Block is added, configure it to display dynamic, scheduled content with these steps:</Text>
              <ul>
                <li>Set the Schedule: Control when your content is visible by setting specific dates or times.</li>
                <li>Add Content: Include text, images, videos, or custom HTML to showcase in the block.</li>
                <li>Choose Element Order: Arrange the content elements in your preferred sequence.</li>
                <li>Enable Countdown: Activate a countdown timer for time-sensitive promotions or events.</li>
                <li>Customize Colors and Alignment: Adjust the block's appearance to match your store's branding.</li>
              </ul>
              <Text as="p">Preview your changes in the Theme Editor and test the block on your store's frontend to ensure everything works as expected.</Text>
              <Button 
                variant="primary" 
                onClick={() => {
                  // Navigation zum Theme Editor im selben Fenster (Top-Level)
                  goToAdmin('/themes/current/editor');
                }}
              >
                Go to Theme Editor
              </Button>
            </Card>
          </div>
        </Layout.Section>

      </Layout>
    </Page>
  );
};
