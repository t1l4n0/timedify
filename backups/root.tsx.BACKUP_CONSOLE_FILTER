import { json, type LinksFunction } from "@remix-run/node";
import {
  Links,
  Meta,
  Outlet,
  Scripts,
  ScrollRestoration,
  useLoaderData,
} from "@remix-run/react";
import { AppProvider as PolarisProvider } from "@shopify/polaris";
import polarisStyles from "@shopify/polaris/build/esm/styles.css?url";

export const links: LinksFunction = () => [
  { rel: "stylesheet", href: polarisStyles },
];

export const loader = async () => {
  return json({
    apiKey: process.env.SHOPIFY_API_KEY,
  });
};

export default function App() {
  const { apiKey } = useLoaderData<typeof loader>();

  return (
    <html lang="de">
      <head>
        <meta charSet="utf-8" />
        <meta name="viewport" content="width=device-width,initial-scale=1" />
        <Meta />
        <Links />
        
        {/* Robuster Konsolen-Filter */}
        <script
          dangerouslySetInnerHTML={{
            __html: `
              (function() {
                // Globaler, permanenter Konsolen-Filter
                const originalError = console.error;
                const originalWarn = console.warn;
                const originalLog = console.log;
                
                // Aggressive Filterung aller problematischen Meldungen
                window.console.error = function(...args) {
                  // Komplett blockieren - keine Video-Fehler mehr
                  return;
                };
                
                window.console.warn = function(...args) {
                  const msg = String(args[0] || '');
                  // Nur echte App-Warnungen durchlassen
                  if (!msg.includes('preload') && 
                      !msg.includes('policy') && 
                      !msg.includes('deprecated') &&
                      !msg.includes('violation')) {
                    return originalWarn.apply(this, args);
                  }
                };
                
                // Entferne Shopify-Preloads kontinuierlich
                function cleanPreloads() {
                  document.querySelectorAll('link[rel="preload"][href*="shopifycloud"]').forEach(link => {
                    link.remove();
                  });
                }
                
                cleanPreloads();
                setInterval(cleanPreloads, 1000);
                
                // Überwache neue Script-Tags und blockiere problematische
                const observer = new MutationObserver(function(mutations) {
                  mutations.forEach(function(mutation) {
                    mutation.addedNodes.forEach(function(node) {
                      if (node.tagName === 'SCRIPT' && node.src) {
                        if (node.src.includes('embed-video') || 
                            node.src.includes('vendor-') ||
                            node.src.includes('runtime')) {
                          // Blockiere Error-Ausgabe für diese Skripte
                          node.onerror = () => {};
                        }
                      }
                    });
                  });
                });
                
                observer.observe(document, {
                  childList: true,
                  subtree: true
                });
              })();
            `
          }}
        />
      </head>
      <body>
        <PolarisProvider i18n={{}}>
          <Outlet />
        </PolarisProvider>
        <ScrollRestoration />
        <script
          dangerouslySetInnerHTML={{
            __html: `window.ENV = ${JSON.stringify({ SHOPIFY_API_KEY: apiKey })}`,
          }}
        />
        <Scripts />
      </body>
    </html>
  );
}
